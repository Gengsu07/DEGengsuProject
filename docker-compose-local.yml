version: "3"
services:
  mageai:
    container_name: magic
    depends_on:
      - postgres
    command: ["mage", "start", "${PROJECT_NAME}"]
    build:
      context: .
      dockerfile: Dockerfile-local
    env_file:
      - .env
    environment:
      PROJECT_NAME: ${PROJECT_NAME}
    ports:
      - 6789:6789
    volumes:
      - .:/home/src/
      - ./.dlt:/home/src/${PROJECT_NAME}/.dlt
      - ./${PROJECT_NAME}:/home/src/${PROJECT_NAME}
    restart: on-failure:5

  postgres:
    image: postgres
    container_name: db-postgres
    restart: on-failure
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pg-data:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql

  metabase:
    image: metabase/metabase
    container_name: metabase
    depends_on:
      - postgres
      - mageai
      - runner
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: db-postgres
      MB_DB_PORT: 5432
    ports:
      - 3000:3000
    volumes:
      - /dev/urandom:/dev/random:ro
    restart: on-failure

  runner:
    build:
      context: .
      dockerfile: Dockerfile-runner
    depends_on:
      - postgres
      - mageai
  restart: "no"

  # env_file:
  #   - .env
  # environment:
  # ENV: dev
  # POSTGRES_DB: ${POSTGRES_SCHEMA}
  # POSTGRES_USER: ${POSTGRES_USER}
  # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  # POSTGRES_HOST: db-postgres
  # PG_HOST_PORT: ${PG_HOST_PORT}
